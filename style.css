*{
    margin:0px;
    padding: 0px;
    box-sizing: border-box;
}
body{
    background-color:palevioletred;
    /*coge la altura max del dispositivo*/
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}
.slider{
    position: relative;
    width: 200px;
    height: 200px;
/* la propiedad transform-style decide si los elementos anidados preservan las transformaciones 3D (preserved- 3d) o no (flat)
En nuestro caso queremos que el elemento .slider tenga transform-style :preserve-3d, ya que queremos que los elementos hijos
tengan un aspecto tridimensional (3d)
*/
    transform-style: preserve-3d;
    animation:rotate 25s linear infinite;
}

@keyframes rotate {
    0%{
        transform:perspective(1000px) rotateY(0deg);
    }
    100%{
        transform:perspective(1000px) rotateY(360deg);
    }
}
.slider span{
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    transform-origin: center;
    transform-style: preserve-3d;
    /*establezco una varible dentro del css, para que el movimiento de todos los elementos
    sea siempre el mismo. Lo hacemos porque es un figura en 3D que se va moviendo
    y no sigue siempre la misma ruta, se mueve en la misma zona.
    el --i es una nomenclatura que se llama sass y la letra puede ser la que tu quieras
    */
    transform: rotateY(calc(var(--i)*45deg)) translateZ(350px);
}
.slider span img{
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    border-radius: 10px;
    object-fit: cover;
    transition: 2s;
}
.slider span:hover img{
    transform: translateY(-50px) scale(1.2);
}



